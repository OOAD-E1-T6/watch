/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

sourceSets {
    main {
        java.srcDirs = ['src/main/java']
        resources.srcDirs = ['src/main/resources']
    }

    test {
        java.srcDirs = ['src/test/java']
	    resources.srcDirs = ['src/test/resources']	
    }   

    testSystem {
        java.srcDirs = ['src/testSystem/java']
        resources.srcDirs = ['src/testSystem/resources']
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(platform("org.junit:junit-bom:5.10.2"))
    testImplementation(platform("io.cucumber:cucumber-bom:7.15.0"))

    testImplementation("io.cucumber:cucumber-java")
    testImplementation("io.cucumber:cucumber-junit-platform-engine")
    testImplementation("org.junit.platform:junit-platform-suite")
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    testSystemImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    testSystemImplementation 'io.cucumber:cucumber-java:7.0.0'
    testSystemImplementation 'io.cucumber:cucumber-junit-platform-engine:7.0.0'
    testSystemImplementation 'org.junit.platform:junit-platform-suite'


    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
}

application {
    // Define the main class for the application.
    mainClass = 'watch.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    systemProperty("cucumber.junit-platform.naming-strategy", "long")
}

task testSystem(type: Test) {
    testClassesDirs = sourceSets.testSystem.output.classesDirs
    classpath = sourceSets.testSystem.runtimeClasspath  
    ignoreFailures = true
}

check.dependsOn testSystem
